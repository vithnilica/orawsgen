// Code generated by go-bindata.
// sources:
// ../../templates/wsa/pom.xml.tmpl
// ../../templates/wsa/src/main/java/PKGNAME/GeneratedTypesMethods.java.tmpl
// ../../templates/wsa/src/main/java/PKGNAME/GeneratedWSSoap.java.tmpl
// ../../templates/wsa/src/main/java/PKGNAME/GeneratedWSTypes.java.tmpl
// ../../templates/wsa/src/main/java/PKGNAME/package-info.java.tmpl
// ../../templates/wsa/src/main/java/orawsgen/DBUtils.java
// ../../templates/wsa/src/main/java/orawsgen/DefaultTypesMethods.java
// ../../templates/wsa/src/main/java/orawsgen/XmlAny.java
// ../../templates/wsa/src/main/webapp/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesWsaPomXmlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x55\x5d\x4f\xe3\x3a\x10\x7d\x2e\x12\xff\xa1\xb7\xef\xb1\xfb\x81\xc4\x15\x32\x41\x3c\x70\xa5\x2b\x51\x58\x69\x77\x81\x37\xe4\xc6\xd3\xd4\xac\x13\x47\x76\xd2\x16\x21\xfe\xfb\x4e\x1c\x3b\x9b\xa4\x2d\xdb\xa7\xce\xcc\x19\xcf\x9c\x39\x63\x87\xdd\xec\x33\x35\xde\x82\xb1\x52\xe7\xd7\x93\x19\x99\x4e\xc6\x90\x27\x5a\xc8\x3c\xbd\x9e\xfc\xfc\xf1\x5f\xf4\xef\xe4\x26\x3e\x3f\x63\x85\xd1\x6f\x90\x94\x63\x84\xe7\xf6\x7a\xb2\x29\xcb\xe2\x8a\xd2\x8c\x6f\x21\x27\xbc\xe0\xc9\x06\x88\x36\x29\xfd\xf6\xb8\xa4\x17\x64\x5a\x1f\xe3\x90\x57\x7b\x2b\x5b\xf4\x6e\xb7\x23\xbb\x85\xc3\xcd\xa7\xd3\x19\x7d\x59\xde\x7f\xc7\xc4\x8c\x47\x32\xb7\x25\xcf\x13\xc0\x2c\x2b\xaf\xac\x73\xde\xeb\x84\x97\xae\xab\xbf\x16\x1b\x9f\x42\xec\xad\x68\x9c\x91\xc3\x11\xb4\x27\xc8\x66\x8c\x3f\x96\x69\x01\xea\xa9\x61\x1e\xbb\x30\xa3\x3d\xdf\xf9\x99\x47\xa6\x46\x57\xc5\xff\x22\xd6\x86\xef\x6c\x0a\x39\xa3\xc1\xe3\x01\xdc\x94\x72\xcd\x93\x12\x3d\x1f\x1f\x64\x59\x17\xbc\x2d\x8a\x07\x9e\xc1\xe7\x27\xa3\x9d\xa8\xc7\xfb\x79\x77\xc1\x58\xb4\xc6\x6e\xdb\xda\x0e\x88\x4c\x7e\xf1\x14\xb5\x88\x77\xdc\x30\xfa\xc7\x6c\x7b\xcb\xb1\x48\x7d\xce\xb3\x15\xaa\x53\xd3\xb9\x5b\x10\x8a\x57\x00\x76\x01\xd6\x1f\x1c\xbc\xb5\xa4\x64\x55\x49\x25\x88\xd5\x95\x49\xe0\xce\x6b\x1f\x3b\xe9\xb1\xe2\x57\x98\xf3\xb3\x51\x33\x49\x37\xf6\x44\x67\x85\x54\x60\x3c\x2a\x9e\x91\x4b\x46\x8f\x87\x4e\x24\x96\xdc\xa4\x50\x1e\x4d\xf4\x21\xcf\x87\x1e\x10\xf2\x01\x01\x05\xe4\x02\x17\x78\x40\xb5\xf5\xbf\x77\xbc\x3d\x6d\xdf\xf8\x96\xef\x87\xc2\xb6\xa8\x8e\x84\x35\x10\x20\xda\xc1\x2a\xe2\x85\x3c\xa2\x6e\x9b\x14\xb4\xbc\xac\x37\xab\x2f\x6c\x8b\xb1\x09\x12\x89\x91\xce\x56\x0a\x10\x8c\x36\x76\xa7\x73\xda\x6b\x1d\x07\x37\x62\xff\x44\xd1\xf8\x4d\xac\x92\x71\x14\xc5\xce\xd1\x83\x8c\xd0\x11\x58\xe0\xf8\xf0\x1a\xf0\x44\x01\xa9\x13\xba\xf4\x6a\x58\xa7\x75\x5d\xc7\x2f\x07\x6c\x6a\x4c\xe8\x7b\x36\x27\xf8\x38\x90\x79\x97\x49\x1d\x3f\x45\x00\x43\xf4\x60\xea\x1d\x57\x23\x90\x77\xbb\xed\xea\xad\xa6\xaa\x70\xcd\xed\x70\x5a\x8d\x7b\xe0\x1d\x5c\xd1\x34\xdc\xff\x66\x83\xfc\x49\xa7\x94\x1d\xaa\xdb\x3c\x16\x78\xd9\xa2\x26\xf1\x0b\x7d\x7b\x1a\x2f\xc8\xfc\xb4\xca\x0e\x99\xe8\x7c\x2d\xd3\xca\xb8\x37\xed\x08\xc0\x81\xd6\x5c\xaa\xc7\x7c\x29\xad\xc5\xfb\xf5\x0c\xab\x97\x4c\xc5\x6b\xae\x2c\x30\x7a\x2c\x74\xa4\x0c\xfd\xaa\x0e\x5e\x9c\xe1\x04\x83\xcb\xb6\x12\x05\x31\x50\x43\x66\xa0\xd0\x56\x96\xda\x34\x72\xf9\xe5\xf3\xaf\xad\xd0\x89\x0d\xeb\x85\x9b\x46\x33\x29\x84\x02\x9c\x1d\xd0\xd9\x7c\xb6\xc0\x4e\xf0\xdf\xf2\xf6\xe9\xee\xc1\x37\xf5\xea\xa6\xfb\x5a\x1f\x4a\x36\x65\xd6\xee\x6f\x5b\x25\xec\xaf\xf4\x42\x74\x4e\x67\x54\x86\x95\x34\xa0\x80\x5b\xdf\x10\xda\x90\xf3\x95\x02\x11\x97\xa6\xc2\x39\x05\xab\xc1\xd2\x3e\x98\xd9\x9c\x17\x76\xa3\xcb\x83\x64\x3f\xe5\x41\xf6\x00\x5e\xb3\xaf\x8c\x8a\xeb\x01\xd8\xf6\x7b\xd3\x6d\x12\xa3\x81\xd6\x88\x05\x28\x22\xf9\x9a\x14\x17\x0b\x02\x55\xbb\x4f\xc8\xf6\x20\x9f\xba\x03\x7c\xb6\xe2\xef\xba\x2a\x63\x01\x6b\x5e\xa9\x92\x51\x6f\x37\x57\xab\x3f\xb2\x8e\xed\x85\xc2\x2f\x76\x78\xbb\xd1\xfc\x1d\x00\x00\xff\xff\x35\xc8\x95\x43\xe6\x07\x00\x00")

func templatesWsaPomXmlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaPomXmlTmpl,
		"templates/wsa/pom.xml.tmpl",
	)
}

func templatesWsaPomXmlTmpl() (*asset, error) {
	bytes, err := templatesWsaPomXmlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/pom.xml.tmpl", size: 2022, mode: os.FileMode(511), modTime: time.Unix(1508269999, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x4b\x6f\xdb\x38\x10\x3e\xbb\x40\xfe\xc3\xa0\xe8\x41\x4a\x0d\x79\xcf\xeb\x7a\x81\x6c\xb2\x28\xb2\xe8\x6b\xe3\x14\xc5\xa2\xe8\x81\x96\x18\x85\xb6\x2c\xaa\x14\xe5\xc4\x31\xfc\xdf\x77\x38\xd4\xcb\x8e\x64\x2b\x71\x5c\xec\xa1\x28\x23\x0e\x87\xf3\xf8\xe6\xe3\xe7\xd5\xea\x4d\xca\xd5\x42\xf8\x1c\x7e\x1f\x81\xb7\x5e\x9f\xbc\x3a\x79\x95\x30\x7f\xc6\x42\x0e\xd5\xa6\xf7\x37\x5b\xb0\x2f\xf6\xf3\x7a\x3d\x34\x46\x62\x9e\x48\xa5\x61\x8a\x1b\x5e\xfa\x33\xf2\xce\x59\x14\xb1\x49\xc4\xc7\x9a\x69\x3e\xe7\xb1\x1e\x36\xd8\xc8\x38\xe6\xbe\x16\x32\x6e\xd8\x1c\xff\xf3\xe1\xaf\x7b\x9f\x27\x0d\xdb\x99\x16\x91\xf7\x41\xa4\xba\x7e\xb3\x54\xec\x2e\x0d\x79\xec\x5d\xfc\xf9\x15\xf7\xd3\x61\xc3\x0e\xbf\x61\x59\xa4\xaf\x97\x09\x4f\x3f\x72\x7d\x2b\x83\x9a\x55\x5b\x76\xde\x7b\x1e\x73\x85\x49\x04\xdf\xc6\x74\xd2\x3b\xa5\x6b\x07\xa7\x27\xaf\xe0\x14\x16\xcb\xd0\xec\xcb\x05\x8b\x39\x2c\x64\xc4\x62\x01\x01\xd3\x6c\xc2\x1e\xe4\x62\xe9\xdf\xc2\x9c\x6b\x19\x00\x03\xad\x44\xb0\x84\x44\x49\xfc\xc7\x7c\x01\x69\xcd\x6c\xce\x40\x4e\xa6\x7c\xa6\x19\xae\x18\x24\x32\xe2\x73\x66\xdc\x0f\xb0\xfa\xd9\x24\x12\x3e\xf8\x11\x4b\x53\x28\x63\xa9\xe7\xb0\x32\xe1\xf4\x06\x83\x54\xab\xcc\xd7\xb8\x5c\xad\x14\x8b\xb1\x61\x6f\xec\x97\xcb\xe0\xbe\x5f\xac\xa9\xad\x63\x5a\x5e\xe0\xf5\xe4\xc6\x74\xb9\x97\x5f\x93\x62\xbb\xf0\xbf\x85\x14\x01\xa4\x5c\x9b\xa2\x90\x31\xd5\xe4\xdc\xc4\xf0\x89\xcd\xb1\x2a\x5f\x98\x62\x73\xa7\x6a\x20\xf8\x32\xee\xc3\xa3\xa6\x83\x9f\xf6\x01\xaf\x13\x71\x08\x89\x39\xc2\x35\x57\xc6\x43\x1f\xeb\xed\x88\x38\xe0\xf7\x50\x96\xbd\x08\xe8\x23\x4b\x8a\x70\xcb\x6f\x97\x81\x5b\x85\xb0\x5e\x53\xed\x5c\xd0\xb7\x4a\xde\xa5\x50\x87\x0a\x60\x35\x7a\x3d\x71\xe3\x18\x8b\xd1\x28\xce\xa2\xc8\xb5\xdf\x7a\x7e\xea\x61\x4a\x9f\xf0\x8b\xb3\x15\x4b\x09\x3a\xdb\xe0\xf1\xf5\xd5\xd7\xf3\xeb\xfe\xeb\x2a\xfb\xf1\xcf\xc8\x6c\xd9\xdc\x5f\xbb\x43\xf2\xa7\xb8\xce\x54\x4c\x6b\x53\xc1\xdc\xff\x67\x6c\xa4\xaf\xb7\x6f\x08\xb9\xbe\x98\xd8\xad\xd6\x9a\x3a\x54\x43\xca\x8c\x6e\x68\x69\x8b\xe2\x21\x42\x9f\xab\x56\x3f\x9f\x33\x7d\x68\x7b\x76\x94\x16\xb3\x2c\x22\x28\x2e\x32\xa7\x5e\xa2\xa4\x8f\x13\x3e\x0c\x24\xe1\x0e\x00\x1f\xb7\x48\x16\x1a\x26\x80\x6f\x69\xa7\xae\x3b\x15\xef\x91\x95\x8b\xb7\x7a\x61\x33\x9a\xda\xd0\x61\x6d\xbb\x41\xad\x81\x83\x6d\xfa\x87\x55\x5c\x96\x35\x69\xe4\xf1\x72\x38\x65\x3e\x99\x79\x9d\xcc\x9a\xe6\xc8\x86\xfd\xfd\x07\x30\xa5\x46\x31\xbf\xcb\x73\xfa\xbe\x5a\x45\x3c\x2e\x6f\xbf\xc4\xc6\xe0\x6d\x3f\xe8\x48\x49\x76\x02\xbf\x5a\xaa\x33\x2b\x43\x74\x5b\xf6\xc6\x1a\xfd\xa2\xb3\xc2\x16\x7d\x8c\xf6\x24\x6c\x2c\xc9\xc1\x46\xca\xc1\xc4\x7f\x5f\x95\xb9\x68\xa2\xf4\x72\xd7\x54\x13\x73\xc8\x56\xdb\xcd\x03\xe5\x71\x60\xa3\xc8\xd3\xce\x5f\x2a\xcf\x57\x1c\xb1\x66\x1b\x6f\x3d\xb5\xce\x49\xdf\x54\xe6\x58\xc3\xb2\x1f\xab\xad\xb0\xc9\xb1\x17\x74\xec\x7f\xd0\xd2\xff\x03\xd1\x47\x90\x39\xc8\x87\xe3\x3e\x03\x54\x6d\x7d\x3f\x04\x5b\x45\x2f\x4a\x82\x78\xc4\x10\x68\x8b\x3d\x3b\xd3\xc8\x4c\x93\x4c\xf3\xd4\x71\x37\x91\xdd\x86\x3a\x59\xa0\xa7\xdc\xca\xf5\x43\x84\xa4\x0e\x8e\x11\x1f\x30\x43\xaa\xe1\x30\x4d\x65\x56\x50\x9e\x32\xd2\x84\xb4\x8c\x5b\x57\x18\xe6\x8c\xad\x0f\x9d\x36\xea\xc2\x08\xb3\x8e\xda\xc2\x9c\xf9\xe5\xca\x82\x2e\x6d\x83\x90\xd9\xdc\xad\x2b\x8c\xc5\x33\x75\xc5\xd9\xd5\xd5\xd9\xbf\xf4\x06\x52\x0c\x9d\x44\x45\x1b\x23\x92\x87\x54\x3c\x70\xc7\xb5\x3c\x78\x23\x15\xa6\xad\x41\x8c\x7e\x1b\x8a\x77\x68\xed\x21\x65\x86\xfa\x76\x28\xde\xbe\x2d\x22\x35\xec\x27\xf6\x52\x1e\xb9\xee\x48\x79\x64\x8b\x30\x74\x04\xbe\x4a\x83\x41\xa2\xf8\x02\xd5\xee\x03\xdc\xcf\xa3\x5c\xd2\x66\x10\x33\x98\xe2\xe9\x4e\x3a\x69\x93\x12\xcf\x94\x62\xcb\x8a\x11\x1b\xaa\x66\xf9\xb0\xa3\x5c\x6a\x82\xdb\xff\x51\x2c\x59\x9c\xb4\xa5\xfc\x3c\xf6\xdf\x89\xfa\xb0\x75\x1a\x8f\x5b\x9e\x32\x6f\x6a\x34\xe0\x0a\x17\x23\xab\x7c\x6c\xef\x37\x3d\x0d\xf3\x19\xcc\x0d\xf7\x6b\x08\x18\x81\x53\xfc\xed\xe6\xfe\x2b\xe7\x6e\x97\x37\x67\x2f\x5d\xd0\x54\x56\xbf\x4b\xc9\xb5\xe1\xc0\x77\x7f\x38\xd5\x14\xba\x9d\x67\x94\xee\x63\x41\xe0\x1c\x30\xa5\x5b\x8f\x87\x1d\xfb\xcd\x01\x35\x13\x59\x9f\x50\x1c\xd8\x72\x40\xf3\x8a\x46\xf6\x17\xf6\xe3\xb7\x82\x5e\x0b\x7a\x27\xec\x6b\x31\x65\x33\x99\xfb\xc2\x26\xc2\x94\x07\xb1\x79\x38\x64\x24\x1f\x66\xb8\xd0\xcb\x24\xb3\xc4\x5a\x7f\x39\x98\xa9\x93\x7d\x3a\x68\x49\x6f\x07\x15\x6f\xd7\xe3\xd1\xa8\x71\xe9\xfc\x8b\x49\x5c\xeb\xed\x58\x0a\xd7\x6c\x79\x74\xc5\x13\x25\x70\x7e\xea\x48\x9c\x6f\x7d\x77\x23\xfd\x22\x92\x27\xd2\x7e\xa3\xe8\xdd\x62\x78\xeb\xf8\xc5\x24\xef\xee\x56\x6e\x2a\xde\x27\x82\xe8\xd7\x08\xde\x3d\x58\xec\xa2\x77\x77\xba\xc8\x29\xb0\x9d\x32\x6b\xb2\x93\x5a\x55\xa8\xce\x1a\x7f\x16\x70\x7e\x59\x1a\x2c\x40\xd6\x81\x09\x77\x62\x77\x5b\x47\x3f\x93\x0b\x9b\x45\xf3\xfa\xbf\x00\x00\x00\xff\xff\xfb\x55\xe6\xf9\x30\x15\x00\x00")

func templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmpl,
		"templates/wsa/src/main/java/PKGNAME/GeneratedTypesMethods.java.tmpl",
	)
}

func templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmpl() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/PKGNAME/GeneratedTypesMethods.java.tmpl", size: 5424, mode: os.FileMode(511), modTime: time.Unix(1508246706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\x5d\x4f\xe3\x38\x17\xbe\x2e\x12\xff\xc1\x8a\xe6\x22\x7d\x55\x25\xc3\x48\xef\x6a\xb7\xa8\x12\x0c\x14\xa6\x23\x86\xb2\x84\x1d\xf6\x0e\xb9\x89\x29\x81\x24\xce\xd8\x4e\x29\x5b\xf5\xbf\xef\xb1\x9d\xaf\xb6\x49\x9b\xc0\x7c\xdc\x2c\x17\xd3\x36\x3e\xf6\xf9\x7a\xce\x73\x8e\x33\x8b\xc5\x3b\x4e\xd8\xcc\x77\x09\xea\x0f\x90\xb5\x5c\xee\xef\xed\xef\xc5\xd8\x7d\xc2\x53\x82\x8a\x45\xeb\x33\x9e\xe1\x2b\xfd\x78\xb9\x3c\x94\x42\xfb\x7b\x7e\x18\x53\x26\xd0\x23\x2c\x59\x89\xf0\x03\xeb\xc2\xe7\xe2\xb0\xe2\x79\x40\xa7\x53\x3f\x9a\x5a\x17\x64\x46\x82\xad\x02\xf0\x49\xd8\xe1\xda\xe1\x73\x0b\x47\x11\x15\x58\xf8\x34\xb2\xae\x09\xa7\x09\x73\xc9\xe1\x6e\x11\xeb\x38\x11\x0f\x24\x12\xbe\xab\x9e\xdf\xbc\xc4\x1b\xbb\x1e\x9f\xb9\x75\x4b\x26\x5f\x88\x78\xa0\x5e\xcd\xe2\x15\x66\x38\xac\x59\x03\x55\x49\x20\x6a\x16\x1d\x1d\xbb\xaa\x55\x4e\x71\x6c\x39\xe3\xe3\xab\x8f\x7e\xe4\x81\xe7\xeb\x32\xfc\x5b\x60\x9d\x62\x81\x9d\xcc\x57\xdb\x5e\x5d\x87\xa3\x03\x22\xca\x5e\xa7\x0a\xe1\xe9\xfa\x61\xf3\x30\xb0\x26\xa0\xa7\x2c\xfd\xbf\x72\x90\x29\xc3\xcf\x7c\x4a\xb2\xa7\xb6\x7d\x54\x1c\x66\x1a\x76\x09\x06\xb7\xdc\x0b\x8e\xe3\xf8\x12\x87\x00\x03\xa3\xbb\xbf\x77\x54\xf8\x69\xee\xef\xa1\xf4\x2f\x15\x97\x62\x68\x80\x8c\xba\x03\xee\xd2\x9d\x46\xaf\xd8\x2a\x0d\xca\xf6\x7d\x12\x22\x76\x20\x52\x07\x07\x65\x09\x81\xd9\x94\x28\x19\x0e\x40\xad\x52\x20\xd7\x1c\xb9\x06\x36\x96\x36\x46\x3b\xcc\x31\xf6\xf7\xba\xca\xfb\xbf\xc3\xc0\x21\xe4\x38\xe0\xd4\x5c\xdc\x10\x2e\x6e\x1d\x85\x01\x6e\x8d\x27\x8f\xc4\x15\x67\xd8\x15\x94\xbd\x58\x6e\x80\x39\x5f\xca\x20\x94\x32\x69\xc6\x52\x94\x08\xc2\x1c\xf1\x12\x48\x7d\xa5\x45\xeb\x6a\x65\xd1\xfa\x78\x7c\x3d\x84\xfd\x71\x32\x09\x7c\x17\xa9\xf3\xd0\x39\x89\x08\xc3\x82\x78\xb7\x8e\xf4\x7d\xb1\xbf\xd7\x89\x99\x3f\x83\x27\x88\xcb\xe4\xb9\xe8\xde\x8f\x70\x80\x74\xad\xa0\x8b\xf1\x39\xe8\xd0\x3f\x2c\x88\x8b\xfe\x66\xae\x9d\xa2\x6d\xb5\xd2\xb8\x99\xdd\xae\x4a\x74\xa7\x0a\x6c\xc8\xe3\x7a\x11\x02\x91\x55\x92\x29\x43\x37\x30\x1e\xbd\x89\x6b\x8f\x19\x76\x03\x72\xea\xc8\xec\xaf\xc8\x84\x38\x8e\x89\x77\xa9\x25\xe1\xe0\x7e\x21\xda\x43\x02\x8a\x6f\x50\x28\xd1\xf6\xa0\x1e\xc2\x1b\x25\x3a\xd8\xac\x5a\xeb\x64\x7c\x79\x73\x3c\xba\x1c\x5e\xaf\xeb\x0c\x28\x7d\x4a\x62\x99\xd4\x35\x8d\x52\xb0\x4a\x6c\x8d\xd2\x4e\x1d\x0d\xe3\x3c\xc4\x33\xea\x7b\x00\x5f\x71\xca\x91\x59\x13\x9d\x2e\x92\x39\xe9\x88\x07\x9f\x5b\x1e\x87\x43\x55\xc0\x3a\x4b\x4d\x8a\xf9\x49\x8a\xdd\xe4\xe6\x13\x1a\x45\x80\x1a\xf0\x05\x41\xfc\x4f\x27\xf0\xdb\xec\x22\xf1\xc0\xe8\x33\x2f\xa4\x9c\x3f\x2f\x86\x73\x97\xc4\x4a\x4e\x29\xb0\xed\xaa\x23\x5c\x1a\x0d\xf2\xe7\xa7\xa0\x8b\xb0\x2f\x38\xc2\x69\xf6\x0b\x41\x53\x65\xab\x4f\x55\x40\xfa\x60\x6c\xd4\x3f\x3a\xf8\xe3\x83\x75\xf0\xdb\xef\xd6\x7b\xeb\xc3\xfb\xfe\xc1\xff\x3f\x1c\xf4\xe7\x50\x7b\xc8\x10\x80\x71\xf9\x19\x43\x4e\x9e\x29\xf3\x0c\x09\x8f\x4e\xa7\x4e\xbd\xc7\xd7\x54\x69\x71\x58\x02\x5e\x12\x90\x3e\x7a\x42\xc3\xd0\x17\xe6\x3d\x0e\x38\xd1\x8b\x8c\x88\x84\xa9\xed\xa5\x58\x2d\x16\x0c\x47\xd0\x67\xde\x85\x8a\x7f\x47\xde\xbc\x97\x7d\x57\xdd\x48\xd3\x32\x97\x4d\xa9\x73\x94\xd3\xb4\x49\x63\x09\x6d\x50\xac\xb1\x06\x29\xd5\x7b\x54\x35\x6b\x99\xb4\xa0\x01\x5f\xda\xec\xad\x1c\x61\x6f\x39\xa1\x9b\xaa\xd6\x44\x6f\x96\x28\xa4\x66\x07\x08\xc6\x34\xe2\x64\x18\x90\x10\x50\x2c\xa1\xdf\x8e\xaf\x10\x10\x48\xce\x80\x39\x99\x70\x8d\x52\x4d\x14\x85\x76\x89\xe1\x5b\xe7\x44\x16\x53\xa5\xfa\x0d\xd1\xb2\xa9\xa6\x4c\x8c\xf2\x4e\xd1\x92\x59\xa3\xb8\x87\x76\x7b\xfd\x5a\x6f\xbb\xca\x84\x2d\xfe\x64\x7e\x14\xf6\xc0\x8e\xb4\x02\x81\xfa\x2c\x3f\xba\xa7\xa6\x01\xc4\xc8\xca\xbe\x6e\xa6\x51\x53\xda\x36\x4d\xeb\x91\x63\xe9\x6f\xf0\x20\x22\xcf\x2d\x62\x9e\x96\xc3\x62\xe1\xdf\x67\x68\xb6\x3e\x61\x3e\x4e\x44\x9c\x08\x15\x69\x05\x68\x59\x13\x7a\x9f\xc5\x14\xb8\x06\xed\xd4\xc0\x79\xb9\x26\x12\x79\x7a\x72\x03\x5a\x62\x2f\x9a\xb9\x2a\x2a\x17\x5c\x29\x18\xe8\xb0\xc4\x50\x38\x08\xf0\x24\x20\x0e\xf4\x17\xed\xbc\x2b\x79\x4d\x16\x74\xcc\x08\x84\x9e\x48\x09\xb3\x94\xff\xcf\xc0\x2d\x8e\x08\x85\x0a\x6d\x9a\x8e\x55\x8f\x47\xfc\x2c\x89\x94\xe6\xd4\x5b\xdb\x66\x64\x0a\x03\x22\x93\xa8\x98\xbd\x70\x91\xc4\x09\xba\x4f\xa2\x27\x97\xa4\xbb\x4d\x68\x92\x64\x8e\x72\xb0\x48\xd6\x95\xf4\xff\x05\xc7\xf9\xb1\xba\x0e\xb3\x95\x91\xd7\x55\xa6\x5c\x93\xe9\x38\x8d\xad\x4e\x3b\x80\x1b\xac\xef\x81\x1f\x40\x6b\xc0\x3d\x29\xa3\xad\x86\xaa\x93\xf3\x8f\x42\x97\xa4\x1f\xfd\xad\x3f\xd0\x8d\x9a\xa7\xa6\x6b\xc7\xd4\x12\xf8\x05\x9a\xaa\x5c\xa2\x49\x8e\x52\x96\x34\xf1\x48\x9f\xd7\xce\x15\xc8\x80\xde\x96\x25\x20\xc5\x53\x85\x7f\xa8\xf4\xb7\xea\xc0\xa8\x48\x49\x84\xa1\x74\x66\x24\xf2\x91\x1f\x7d\x0f\xeb\x1d\xd2\xde\xf4\x5e\xa9\xb8\xad\x42\x4a\x5d\x38\xe0\x9b\x06\xff\xba\x7f\x1b\xb9\x74\xb9\x45\xe6\xc4\x4d\x04\x49\xab\x42\xf5\x23\x57\x37\xa2\x6e\x7a\x63\x69\x00\x52\x00\xbc\x2b\x64\x40\x2a\x21\xda\xb2\xa4\xe1\x43\x0c\xde\x02\xec\x73\x22\x1a\x03\x1b\x7a\x6d\x0d\xb1\xfc\x2c\x0b\xaa\x52\xd3\x30\x70\x1b\x81\x8f\x7c\xf7\x61\x03\x91\x3b\xcb\xb5\xae\x52\xd7\xf3\x52\x07\xb3\x5d\xa1\xaa\x46\xfd\xf6\x18\x35\xac\xd9\x5a\x68\x2f\x11\x4c\xc2\x10\x0c\xb3\x98\x0f\x49\x46\xb9\xb2\x05\xc2\xe5\xd9\x54\x37\x6b\xcb\x19\x7e\x1d\x5e\x0f\x7b\x06\x61\x6c\x5b\x33\xec\xa1\x74\x28\xeb\xa8\x21\x54\xb5\xb7\xeb\x04\x26\xee\x90\xe4\x2a\xcc\x54\x24\xb5\xa1\x68\xb5\x60\xd8\xae\x46\x9b\x4f\x7b\x59\xd4\xf3\x91\x6f\x03\x08\xa3\x68\x15\x07\xb6\x3d\xd3\xc9\xcf\x53\xff\x22\x1f\xcb\x1b\xd9\xb1\xeb\x12\xce\x29\x93\x81\x37\xf3\xdf\xea\x7a\x70\x36\x1a\x5e\x9c\x76\x33\x41\x25\x90\x8d\x2c\x92\x5d\x18\x8d\xc7\xcc\x83\xbb\xd2\x20\x6f\x54\x79\x76\x81\xb0\x6e\x48\x18\x07\xd0\xf8\xbe\x62\xe6\xcb\x2e\x98\x0e\x3f\x67\x3e\x83\xa9\x18\x01\xf8\x48\x9e\x95\x96\xf8\x93\x44\xab\x9f\x64\xea\xce\x77\xa8\x93\xf2\xcd\x6d\x53\xf3\xb5\x42\x8e\xfa\xec\xa1\x14\x37\x46\x1d\xbc\x8d\x4d\xac\x2d\xf3\xb8\x5d\x53\x2a\xb2\x11\xa6\xf9\xc4\xa7\xb6\xa7\x73\x69\x7a\x3f\xd5\x77\xbb\x06\x43\xdd\xe2\xf5\x61\x55\x3b\x6b\x1b\x33\xe0\xc8\x8f\xca\x0d\x59\x3f\x95\x5e\x96\x3d\x1c\x14\x81\x92\xee\x95\x02\x75\xa7\xb6\x1b\x3d\x46\xbe\x25\x3e\x23\x1e\xc4\x42\x02\x01\x46\x61\x5f\x8f\x4a\xe9\x83\x6e\x66\x47\x89\x7d\x95\xf2\x57\x6b\x6e\xa3\x33\xe7\x0b\x1d\x08\xf2\x6d\x93\xa0\x90\xe1\x91\x7b\x0c\x94\xd7\xf7\x00\x46\x46\x26\xaf\x5e\x71\xb8\x0f\x24\xc4\x2b\xd5\x22\x65\x6e\x80\x06\x8c\x2a\x1d\xf9\xe5\xa3\x2d\x43\x42\xfa\x55\xf2\x97\x4b\x54\x07\xcc\x3a\x26\x5c\x2a\xce\x28\x82\x6b\xdb\x13\xf2\x0f\x9a\x55\x37\x88\x37\xb0\xc4\xaf\x2e\x82\x8c\x1d\xcb\x6d\x73\x67\xd3\xb4\x6d\x58\xa4\x1e\x46\x7c\x65\xf8\xc4\x21\x7e\x5b\x34\xea\xde\x8f\xfd\x05\x4f\xef\xea\x83\x71\x37\x96\x15\xf3\x3d\xe9\xb6\x66\x52\x7b\x05\x45\xaa\x41\x65\xb5\xc3\xbe\x66\x96\xf8\x99\x64\xfe\x6a\x2e\x6f\x89\xc3\xcd\x6b\x65\xc3\xeb\x5c\x84\x67\x0c\x0b\x3a\xc3\x08\x04\xe4\x8b\xe5\xf2\xa8\xbc\x49\x78\x7a\x26\x00\x80\x34\xe3\xb7\x66\x6c\x53\x3f\xba\x96\x48\x87\xa9\x57\xe2\x9d\xe2\x32\xf4\x56\x18\x54\x5c\x0a\x4b\x77\xaa\x8a\xce\xd3\x9c\xfe\x47\xba\xef\x34\x0c\xd2\x4a\xdf\xb1\xed\x37\xe8\x1d\xb7\xd3\x5a\x0a\x60\xab\xc6\xd3\xac\xef\x94\x15\xfc\xa2\xae\xf3\x03\xa6\x4e\x43\xdf\x3d\x8c\xb7\x4c\x5d\xeb\x6f\x17\xbf\x43\xc1\xa7\xd6\x55\x15\xac\x32\xb7\x75\xc1\xb6\x61\x1a\x96\xfd\xff\x59\xb9\xd5\xa3\x2d\xbc\xb3\x9d\x76\xfe\xcb\x58\x9b\x8c\xe5\xb5\x5b\xc3\xa2\x3f\xb7\x84\x1b\x52\x79\x05\x5e\xd6\xa6\xa1\x27\x41\x18\x06\x8f\x5d\xb8\xd8\x02\x54\x5c\xff\xd7\xcc\x86\x3f\x2c\xf1\xcb\xf2\xa4\x58\x1a\x19\xe1\x9f\x7f\x03\x00\x00\xff\xff\x83\x1e\x32\x3b\xce\x1f\x00\x00")

func templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmpl,
		"templates/wsa/src/main/java/PKGNAME/GeneratedWSSoap.java.tmpl",
	)
}

func templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmpl() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/PKGNAME/GeneratedWSSoap.java.tmpl", size: 8142, mode: os.FileMode(511), modTime: time.Unix(1508260214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4d\x6f\xdb\x3c\x0c\x3e\xa7\x40\xfe\x03\x61\xf4\x60\x07\x81\xf3\x9e\x9b\x37\xc3\x8a\xb5\x1b\x32\x74\x1f\x40\x3a\x74\x57\xc5\x66\x53\xb5\xb2\xec\xca\x72\x96\xcc\xd0\x7f\x9f\x28\xf9\x2b\x41\xb0\x62\x40\x74\xa2\xc8\x47\xe4\x43\xf2\xb1\xeb\xfa\xb2\x44\xb5\xe5\x09\xc2\xd5\x02\x62\x63\xc6\x17\xe3\x8b\x82\x25\x2f\x6c\x83\xd0\x07\xe3\xcf\x6c\xcb\xbe\x7b\xb7\x31\x73\x02\xf1\xac\xc8\x95\x86\x67\x1b\x88\x2b\xcd\x45\x7c\xc7\x4b\x3d\x3f\xf0\xef\xe2\x5d\x26\xe2\x35\x97\x69\xcc\xa4\xcc\x35\xd3\x3c\x97\xf1\xc4\x3d\x9f\x4d\xc6\x17\x30\x81\xed\x7e\x83\x12\x55\xbe\x65\x12\x41\x2b\x9e\xee\xa1\x50\x39\xa4\x4c\xb3\x35\xfb\x9d\x6f\x11\xf2\xf5\x33\xbe\xe8\x3d\xa1\x67\x96\x5a\xb5\x16\x3c\x81\x44\xb0\xb2\x84\x4f\xf4\x94\x69\x4c\x1f\x56\xf7\xfb\x02\x4b\xa8\x29\xf3\x68\x36\x2b\xb5\xaa\x12\x6d\xcd\xba\x56\x4c\xda\x4e\x2e\xbd\x67\x99\xee\xa6\xad\xed\xfa\x5d\x39\xf3\xc6\x56\x73\x09\xa8\xfd\xd1\xfb\x9f\x99\xb8\x4e\x12\x2c\xcb\x5c\x91\x37\xec\xee\x74\x8b\x3f\x2e\x6f\xef\x6e\xa2\x06\xe7\xe2\x92\x65\x08\x0b\x08\x68\x5c\x2e\x5f\xfc\x50\xa6\x2e\xf4\xd5\x46\x8c\xf9\x61\x87\x18\x4c\xa9\xaf\xe2\x9b\x4a\x51\x59\xac\x25\x3a\xea\xc9\x71\x8d\x99\xa7\x46\x16\x11\x6b\x13\x2d\xed\xdd\xb2\xaa\x6b\xfe\x08\xb2\x47\xc2\x7f\xc6\x4c\xeb\x1a\x65\x6a\x0c\x95\x25\xb7\x5b\x11\xe1\x7d\xd1\xa0\x09\xdb\x42\x86\xd8\x36\x83\x2b\x69\x09\xed\xfc\x7a\xc2\xf4\xf6\x03\xf9\xfc\xe3\x7f\xa4\x47\x68\x37\x8e\x5b\x81\x19\x4a\x1d\x2a\x7c\xad\xb8\xc2\xd4\x76\x6a\x81\x38\x05\xc9\x85\x60\x6b\x81\xbd\xc3\xd6\x59\x74\xd4\x69\x5e\x03\xea\x91\x4b\xe8\x9a\xc6\x57\x5f\xd5\x95\x6a\xf7\xb4\x4c\x21\x48\xf1\x91\x55\x42\x5f\x59\xa5\x60\x30\xa0\xb0\x4a\x9e\x30\x63\x07\x7b\x21\xc8\x3d\xcf\xb0\xcb\xdb\x0e\x66\xd4\x4e\xa5\xae\x43\x2b\x52\xdc\x41\xa7\xf7\xb6\xd4\x17\x56\x9c\x24\x10\xf5\x23\x33\x06\x4e\xaf\xc0\xe9\x7c\x58\xcf\x38\x45\x36\xb7\x46\xaa\x4c\x29\xb6\x1f\x2a\xd5\x39\xfc\xb8\x9d\xe9\x74\x7a\x4d\xd6\xf9\x64\xea\x12\x1f\xa9\xf4\x84\x42\xc1\x9e\xc0\x61\x83\x37\x64\xe4\x13\x1e\xa9\xa8\xcb\x31\x94\xc6\x91\x12\xa2\x06\xd2\xe4\xa5\x7f\xc8\xff\x6f\x6c\xc3\xd7\xfa\xcb\x3a\xde\x81\x83\xf8\xf1\x9f\x3f\xf9\x06\xb5\x5b\x47\x18\x75\x0d\xd2\xb1\x62\x0d\xfd\xc2\x16\x0b\x90\x95\x10\x87\x61\x3a\x4d\xd8\x7e\xc9\xbf\x06\xff\x4d\x97\xec\x3c\xdc\xc2\x68\x3e\x28\x69\x06\xb6\x42\x5d\x29\x09\xfa\x89\x97\x71\x3b\x9d\x51\x0b\x3a\xd2\xa5\xf9\x13\x00\x00\xff\xff\xb5\x99\x21\xfd\x15\x06\x00\x00")

func templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmpl,
		"templates/wsa/src/main/java/PKGNAME/GeneratedWSTypes.java.tmpl",
	)
}

func templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmpl() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/PKGNAME/GeneratedWSTypes.java.tmpl", size: 1557, mode: os.FileMode(511), modTime: time.Unix(1508246706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x29\x4e\x2d\x2a\xcb\x4c\x4e\x55\xb0\xb2\x55\xd0\xab\xad\xe5\xe5\x72\xc8\x4a\x2c\x4b\xac\xd0\xab\xc8\xcd\xd1\x4b\xca\xcc\x4b\xd1\x4b\xcc\xcb\xcb\x2f\x49\x2c\xc9\xcc\xcf\xd3\x8b\xc8\xcd\x09\x4e\xce\x48\xcd\x4d\xd4\xc8\x4b\xcc\x4d\x2d\x2e\x48\x04\x6a\xb3\x55\x50\x42\x18\xa2\x17\x5e\x9c\x92\xe3\x07\x94\x0b\x06\xc9\xd5\xd6\x2a\xe9\x28\xa4\xe6\xa4\xe6\xa6\xe6\x95\xb8\xe5\x17\xe5\xba\xa4\xa6\x25\x96\xe6\x94\x00\xb5\xe0\xb5\xc2\xaf\x18\xa4\x58\x2f\x30\xd4\xd1\xc7\xd3\xcd\xd3\xd5\x45\x93\x97\x0b\x68\x5a\x76\x62\x7a\xaa\x02\x92\x4d\x5e\x40\x23\x02\x20\xc2\xb5\xb5\xd6\xbc\x5c\x80\x00\x00\x00\xff\xff\xfa\xf9\x9c\xa9\xca\x00\x00\x00")

func templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmpl,
		"templates/wsa/src/main/java/PKGNAME/package-info.java.tmpl",
	)
}

func templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmpl() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/PKGNAME/package-info.java.tmpl", size: 202, mode: os.FileMode(511), modTime: time.Unix(1508246706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaOrawsgenDbutilsJava = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x5d\x4f\x23\x37\x14\x7d\x06\x89\xff\x70\xcb\xd3\x44\x20\xaf\x4a\x1f\xd3\x54\xda\x6e\xb6\xd5\x4a\xb0\x51\x0b\x95\x56\xaa\xfa\xe0\x38\x97\xc1\x89\xc7\x9e\xb5\x3d\x61\x42\xb5\xff\xbd\xd7\x1f\x99\x49\xc2\x0c\x6d\x05\x02\xdb\xf7\xf3\x9c\x7b\xec\xa9\xb9\xd8\xf0\x12\xc1\x58\xfe\xec\x4a\xd4\xd3\x8b\xf3\x8b\x73\x59\xd5\xc6\x7a\x58\xf3\x2d\x67\xee\xab\x62\xef\xad\xe5\xbb\xe9\xeb\xf3\x0f\x46\x6b\x14\x5e\x1a\x3d\x60\xbc\xff\xed\xf6\x63\x2b\xb0\x1e\x37\x7f\xb9\xbb\x1d\x32\x78\xdb\x08\x3f\x60\x78\x90\x15\x3a\xcf\xab\xfa\xc4\xd6\x78\x99\x5b\x74\x43\x96\x5f\x2d\x96\xc6\x4a\xae\x3f\x70\x85\x7a\xc5\xed\x29\xc4\x96\xb5\x95\x62\x2b\xee\xb9\xdf\xd5\xc8\xe6\x79\x41\xe0\x1e\x65\xd9\x58\x1e\x00\x8c\x20\x19\x09\xfd\x85\x0b\x6f\xec\xee\x4d\x5f\x02\x3f\xd4\xd9\xab\x00\x6f\xb9\x76\x8f\xc6\x56\x6c\x65\x2a\x36\x5f\xdc\xfd\x8e\xae\x51\xfe\x3f\xb9\xde\x9b\xc6\x0a\x3c\xc4\x6b\x6c\xc9\x9e\x7f\x10\xd1\xe1\xa3\xc2\x0a\xb5\x3f\x36\x73\xa1\x90\xad\x57\x4b\xc1\x16\x71\x3d\x34\xe2\xec\xd5\x0f\x6b\x8e\x4e\x58\x59\x13\xe6\x98\xac\x6e\x96\x4a\x0a\x10\x8a\x3b\x07\xf3\x9f\xff\xa0\x29\x38\xf8\xfb\xe2\xfc\x8c\x7e\xb3\x8d\xe6\xe8\xe9\x5f\x0a\x07\x61\x91\x7b\x4c\x9b\xa2\xaf\x08\xc2\xe8\xeb\xe0\x23\x75\x09\x81\xb4\xcf\xbc\xc2\x6b\x58\x2c\xd7\x64\xff\xf3\x2f\xe0\xd6\x4e\xc0\x3f\x59\xf3\xec\xe0\x50\x6d\xb1\xd6\xd9\xbb\x77\xe6\x09\xd7\x4b\xbe\x81\x8d\x47\xbb\x83\x17\xbe\x96\xce\x4b\x78\x6c\x74\x69\xb6\x5c\x4b\x90\x50\x1b\xa8\xad\x5c\x85\x8d\x36\x5b\xa4\xbd\x32\x2f\x9b\x1d\xac\x4c\xa8\xd7\x84\x34\xa7\x08\xc1\xad\x66\xa7\x67\x2c\x01\xe8\x0f\x8a\xbe\x5b\xc2\x30\x99\x86\x44\x52\x7b\xd0\xf8\x7c\x8b\xba\xf4\x4f\x33\xb7\x62\x25\xfa\xb4\x29\xb2\xc3\x63\x41\x88\x98\x8a\x67\x3f\x75\xae\x93\x04\x87\xf0\x6c\x21\xa8\x67\xc9\x5f\x24\x54\x3c\x34\x08\x34\xbf\xdc\x34\x6e\x28\xf9\x0b\x38\x10\xb2\xa2\x13\x21\x3d\x8f\xca\x88\xa1\x91\xa3\x50\xfc\x88\xa6\xe2\xf2\x5f\x12\x16\x97\x57\x7b\x1c\x57\x97\xd7\x70\x79\xd5\xb7\x97\xf6\x7d\x8f\x11\xc0\x37\x54\x0e\xe1\x08\xc6\x8f\x03\x30\x1e\x16\xf3\x05\xac\x51\xd3\x44\x94\x09\xa3\xf0\x31\x38\xfc\xa1\xc0\x59\xba\xc9\x4c\x98\x7a\xb7\x88\xa9\xae\xe1\xa4\x8e\x45\xdf\xd8\xa8\x0e\x76\xa4\x9c\x9e\xf4\xa0\x8c\xe9\x59\xd0\xdb\xb7\x21\xd9\xc5\x12\x59\x75\x71\xfd\x3f\x45\x37\xaa\xb9\x94\x98\x2e\x06\x2d\x60\x06\x45\x71\x7a\x89\x26\x41\x0e\xb9\xeb\x64\x4b\xf5\xbb\x42\xb1\xf3\x03\x90\x29\xd7\x34\x21\x19\xc2\x32\xf4\x8e\x04\x0c\x5b\xb4\xfe\xfe\xab\x7a\x70\x37\x5f\x2a\x45\x86\xa2\x7b\x3e\xc1\xbb\x71\x04\x34\x3d\xef\x66\x33\xdd\x28\x35\xc9\x2d\x84\x75\x6c\x69\xa0\x0e\x57\xdf\x13\xce\xa0\xac\x57\xc6\xac\xea\xe0\xc2\x1c\xfa\x50\xfe\x93\xbe\x93\x4a\x49\x47\x25\x82\xfa\xc3\x51\x31\x49\x6e\x9e\x6e\x68\x12\x48\xae\x7a\xf2\x96\x32\xaa\xf1\x49\x53\xff\x5a\x50\x4c\xd8\x0d\x01\x2f\x42\xb5\x2c\x46\x6a\xce\x8b\x27\x28\xde\x7e\xcf\x01\xf7\xc2\x1c\xb9\x24\x98\xd3\x8d\x69\xa9\xa7\x35\x93\x9e\xe8\xbe\x89\xdc\x17\xc3\xd3\xe1\xea\xcd\x01\x90\x7d\x64\x02\xfb\x3d\x35\xd9\xd5\x0d\xee\xcc\x9b\x01\xfe\xf7\x1c\x77\xb4\x27\xae\x07\x61\xa4\xcf\xf1\x01\x86\xf7\x7a\x17\x30\xd0\xea\xd5\xe5\x48\x56\x68\xdf\x04\xd1\x8e\x40\xc8\x85\x5c\x4c\x4d\xda\x39\xb8\xc5\xd1\x92\x65\x93\x3f\x4e\x80\x6a\xd6\x06\x1c\x54\xb0\x7f\x26\x51\x7d\x97\x92\xe7\xd1\x75\x5f\x45\x7a\xb8\x2b\x5a\xcd\x52\xf6\x20\xbb\x74\x5e\x74\x1e\x2c\x7e\x95\x52\xa6\xb3\xe4\x1d\xdc\x3e\x9b\x15\x52\xda\x7c\xde\xdf\x3d\xca\x72\xf0\xb4\x1d\x09\xb4\x43\x34\x2a\x8d\xcc\x53\x7f\x19\xe9\xe0\x26\x1d\x16\x47\x34\x8c\x13\xb9\xa7\x7a\x16\x46\x9e\x43\x3b\x1a\x52\xf0\x31\xcf\x6d\x34\x76\xdf\xfe\x40\xc8\xbd\x15\x7b\x42\x88\xc8\x74\x5e\x74\x1e\x87\x84\xb4\x81\x8a\x50\xa2\xc8\xf4\x4f\x72\x7c\x08\x8c\x14\x4d\x8e\x1e\xa7\xb6\x7b\x97\xd2\x0f\x2d\xff\x09\x00\x00\xff\xff\xfc\xaf\x55\x8a\x50\x0a\x00\x00")

func templatesWsaSrcMainJavaOrawsgenDbutilsJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaOrawsgenDbutilsJava,
		"templates/wsa/src/main/java/orawsgen/DBUtils.java",
	)
}

func templatesWsaSrcMainJavaOrawsgenDbutilsJava() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaOrawsgenDbutilsJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/orawsgen/DBUtils.java", size: 2640, mode: os.FileMode(511), modTime: time.Unix(1508246706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJava = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\x59\x6f\xdb\xb8\x16\x7e\x76\x80\xfc\x07\xde\x3c\x49\xf7\xe6\xca\x8d\xd3\x41\x3b\x13\xf8\xc1\x4a\x82\x99\x02\xcd\xd2\x38\xdd\x30\x28\x06\x94\x44\xdb\x6a\xb5\x95\xa4\xe3\x78\xa6\xf9\xef\x73\xb8\x68\xb1\x25\xca\xea\xc4\xc9\xe4\xa1\x41\x51\xc9\xe2\xe1\xe1\x77\x96\xef\x1c\x52\xca\xb0\xff\x05\x4f\x09\x4a\x29\x5e\xb0\x29\x49\x8e\x76\x77\x76\x77\xc2\x38\x4b\x29\x47\x9f\xf1\x0d\x76\xc2\xd4\x71\x97\x9c\x8c\x28\xc5\xcb\x57\x49\x36\xe7\x63\x4e\x09\x8e\x8f\xcc\x52\x17\x73\xde\x22\xd6\xaa\xa3\x7d\xea\x15\xc1\x01\xa1\xf5\xe7\x20\x1f\x26\x53\xd3\xe8\x7b\x1a\xf2\xda\xf3\x18\xf3\x99\xe3\x86\xd3\x13\xe2\x87\x31\x8e\xd6\x46\xd9\xd7\xc8\x71\xa3\xd4\x6b\x78\x7c\x8c\xa3\x08\x7b\x11\x19\x73\xcc\x49\x4c\x12\xde\x24\x63\x98\x9a\x26\x09\xf1\x79\x98\x26\x0d\x83\xe3\x37\xaf\x4f\x6f\x7d\x92\x99\x87\x3f\x9c\xbd\x5e\x0f\xce\xad\x73\x1b\x47\x4e\x80\x01\xcb\x32\x23\x0e\x48\xfc\x4a\xc9\x34\xa5\x21\x4e\x00\x27\x49\x02\x4c\xab\x53\x20\xc6\x7e\x44\x9c\xcf\x81\xe7\x3b\x17\xf2\xbe\xc5\x9a\xba\xf0\x25\x25\x19\xa6\x24\xe8\x24\x7c\x0d\x80\x58\x4d\x40\x98\x72\x71\x39\x7a\xf3\xf6\xb4\x36\x74\x1b\x78\xc2\x00\x31\x4f\x62\xde\xdd\xc9\xe6\x5e\x14\xfa\xc8\x8f\x30\x63\xe8\x84\x4c\xf0\x3c\xe2\x52\xed\x19\xe1\xb3\x34\x60\xe8\xaf\xdd\x9d\x1e\xfc\xeb\xf7\x67\x9c\x67\xec\x97\x7e\x3f\x48\x7d\xe6\x68\x7d\x7e\x1a\xf7\xfd\xa0\x3f\xfa\xf9\xc5\xe1\xe1\x4f\x7f\x3c\x1b\xf4\x71\x96\x31\xe7\x40\xdc\xbc\x3c\x7c\x31\x78\xde\xf7\x30\x0b\xfd\x43\x67\xc6\xe3\x5c\xcd\xf9\xdb\x33\xf7\xf4\x0a\x6e\xf5\xca\x0c\x0c\x85\xcb\x4d\x1a\x06\x88\x11\x7e\x3e\x8f\x3d\x42\x2f\x31\xc5\xb1\x55\xc6\x12\xf9\x69\xb2\x8f\x6a\x8e\x44\x3e\xdb\x47\x2a\x31\x51\x26\xa6\x10\x48\xc2\x73\xb8\xec\xa3\x32\xed\x90\x08\x9d\x8d\xf8\x8c\xa6\x0b\x86\xaa\x29\x20\x6d\xeb\x81\x35\xb0\x6e\x29\x6f\xad\x69\x92\xd3\xc1\x5b\xbd\xbb\x66\xd0\x90\x0c\x21\x13\xd2\x12\x39\x90\xeb\xbe\xe0\xdb\xb1\xe6\xcb\xe5\x0b\x89\x59\xeb\x90\x8b\x8c\x96\x91\x74\xc0\xe5\xa7\x57\xaf\x8e\x0d\x46\x54\x3c\x35\xcd\xfd\xff\xb0\x56\x50\xc2\xe7\x14\x14\x32\x67\x6a\x76\xbc\x01\xed\x85\xf7\x19\xf0\x08\xa4\x27\x9e\xba\x57\x88\xad\x86\x0a\xa0\x20\x57\xec\x4b\x0b\x50\x8d\x25\x41\xa1\x0b\x27\x56\x3a\x1c\x26\xf3\x28\xb2\x35\x50\x71\x7f\x54\x01\x9e\x76\x71\xe4\x7b\xd6\x0d\x9e\x36\x28\xe8\x08\x2d\x68\x87\x66\x95\x20\x6c\x14\xe4\x38\x25\xf1\xde\x8d\xae\x8e\x7f\x1b\x5d\x0d\x8c\xd4\x7b\x87\xa9\x3f\xc3\x74\x70\x7f\xf2\xe9\xa7\x9d\x88\xa7\x64\xff\x29\xe9\x72\xcc\x4f\x91\x76\xda\xe1\x06\x33\x34\x84\x69\xe9\xf7\x47\x24\x5d\x93\xd3\x3b\x13\x2e\xc7\x6b\xce\x69\x0d\xed\x61\xe9\x56\x3a\x30\xa7\xda\x66\x60\x5b\x26\x9b\x82\xb0\x4a\x34\xc9\xb5\x93\xd1\xf5\xa9\x91\x67\x27\x10\xc5\xfb\x73\xac\x69\x1f\xd2\x8d\x71\xd7\x61\x4c\x00\x52\x9c\xad\xe7\xef\x89\xfb\x96\x87\x11\x83\xae\x9e\xdc\x10\xca\x3f\xc4\x11\x28\x1e\x8c\xbf\x46\xd7\xcc\x92\x9a\xbb\x30\x52\x58\xf7\x14\xd9\x78\xfd\xea\xec\x74\x7c\x3d\x3a\xbb\x34\x18\xd1\xe8\xcf\xa9\x8a\xd6\xa3\x30\x73\xcd\xfb\xd2\xed\x03\x15\x03\x4b\xb1\xd6\x10\x38\x53\x58\xea\xcc\x15\xb6\x98\xc9\xd1\xe8\x81\x2d\x71\xb8\x2d\xb5\xd2\xef\x8c\x48\x4e\xf7\x76\x6b\xb6\x4b\xf5\xb6\xe0\x94\x18\x8a\x00\xd9\x81\xbd\x5a\x12\x32\x1a\xde\x00\xdc\xa2\x76\xc9\x93\x06\xf2\x31\xe3\x63\x3c\x21\x03\xf5\xdb\xd2\x98\x53\xdb\x98\x2b\xe1\x04\x19\x5d\x2d\xc7\x50\x98\xc0\x1a\x89\x4f\xd2\x89\x5e\xc5\x96\x13\xcb\x9a\xa5\x1e\xca\xa2\xda\xbb\x23\x11\x23\x48\x84\xaf\x3a\x4f\x1d\x1e\x6c\xb4\x32\x51\x1f\x1b\x1c\x1f\x8e\x8d\x9c\x08\xb4\x96\x96\x53\xf1\xeb\xdd\x21\xa9\x4c\x4d\x92\x06\xa0\x84\x2c\x56\x6c\xb0\xf6\x52\xb0\xf0\x0b\x87\x81\xe8\x4f\x82\x32\x4a\x6e\xc0\x5f\x28\xc1\xb9\x43\xf6\xfe\x97\x8a\x44\x3f\x16\xa7\x11\xcb\x16\xb7\x22\xc1\x2d\x5b\xaf\x50\xdd\xce\x08\x3c\x1f\x2f\xcd\x55\x16\x82\x23\xf0\x6e\xa1\xd0\xc6\xd1\x28\x59\x6e\x2a\xad\x22\x85\x40\x42\x85\x06\x7d\xfb\x26\xe5\x1d\x9c\x2c\x75\xb0\xb4\x5f\x54\x05\x3e\x87\x27\x1b\xca\x95\x72\xc8\xfe\x9e\x36\x73\x4f\x79\x00\xec\x36\x6b\x30\x9c\x0f\xf5\x59\x70\x1f\xed\x8d\x3f\x8e\x9d\x55\x7d\x77\x95\x90\xe9\xed\x98\xca\xc4\x8d\x9d\x01\x5c\x22\xe8\x0b\x77\x96\xf4\x68\xd9\x1f\x64\x88\x0a\xa0\xf7\xd7\xb7\xa1\xdf\xe8\x38\x3f\xc5\x96\xa3\xa9\x66\xa8\x6e\x2a\xad\xa6\x45\xa6\xfe\x4b\x4d\x06\x56\x1f\x28\x2c\xba\xcb\x34\x45\xac\x7b\x8b\xd1\xc6\xb4\x74\x19\x65\xf7\x77\xf6\x15\xc1\xa8\xb4\x42\xa7\xce\x6d\x66\x3d\xaf\x8c\xcd\xa6\x08\x47\xde\x5e\x36\x5a\xf2\xd0\x1d\xa6\x1a\x99\xb5\x46\x11\x14\x01\xa9\x6c\x3a\x8f\x5f\x5f\xb8\xc6\x72\x28\x5e\x97\x3d\xee\xc1\x4e\xac\xb8\x4e\x10\xd9\x10\x2a\x2f\x12\xbb\x6f\x2b\x85\xb6\xa7\xc8\x71\xe1\xf4\x8d\x27\xbc\x87\x07\xcf\xe9\x52\x97\x71\xb1\x16\xf2\x87\x8a\xcb\xf5\x18\xe8\x3e\x02\xf9\xe8\x1b\xf2\xb1\xa7\x42\x83\xe8\xd0\x97\x2a\xe0\x44\x85\x7d\x98\xad\x5e\x18\x5b\x4a\x01\x82\x3f\x71\xd6\xfa\xfd\x13\xc2\x94\xa2\xa1\x8c\xac\x7c\xf0\x12\xfd\x17\x1d\x3c\x1b\x3c\xff\x54\xc8\x29\x53\xdc\x79\x18\x09\xb5\xde\x7c\x32\x21\xf9\x8c\x95\xa1\x8a\xea\x10\xbc\x90\xcc\x63\xb1\x36\x13\x70\x8a\x81\xc5\x2c\x8c\x08\xb2\xac\xea\x20\xe8\xa2\x10\x3a\x1c\x58\x00\x65\x1f\x3d\xdb\x17\x90\x1c\xd8\x2f\x4e\xf9\xcc\xb6\xd1\x7f\x86\xe8\xff\x07\xba\xff\x22\xfd\xa7\x40\x38\x38\xcb\x60\x57\x59\x4c\xab\x2a\x2d\xb1\xdc\xe5\x37\xd4\xf1\xa3\x94\x11\x0d\x33\xe7\xad\x56\xc5\x53\x7d\xa6\xb6\x8f\x7a\xb2\x09\xfa\x98\xfb\x33\x64\x95\x71\x22\x76\xfb\xde\x88\x14\xdd\xb3\x63\xa9\x95\xc1\xdd\xca\x19\xbc\xcc\x9e\x96\x9d\x7c\x91\x59\x69\xa2\x37\x81\x12\x80\xf6\x86\xfa\x00\x80\x16\x90\x34\xac\x9e\x34\x07\x5a\x6a\xe1\x2c\x84\x9c\xde\xf2\x8b\xdf\x4d\x2e\xf5\x8f\xee\xeb\xc1\x4e\xaf\x0b\xda\xfd\xb7\xa5\xea\x5e\x23\xa6\x25\xae\x76\xf0\x83\x6a\x4f\x82\x6a\x2b\x6f\x6d\xdc\xb6\x06\xea\x6e\xa5\x81\x7a\x4b\x4e\x20\x90\xdd\x3e\x49\x18\x1a\x68\xd3\x97\xc2\xee\x8d\xd4\x7d\xa2\x8d\xd4\x35\x37\x52\xed\xb4\xa9\x72\xc9\x63\x35\x52\xb1\x16\xf2\x74\x23\xad\xc7\xa2\x6c\xa4\x9e\xa9\x60\x56\xe2\x83\x42\x06\xdc\xf1\xd4\x07\x8f\x04\xd3\xe5\x0a\xc5\x7b\x8d\x9f\x75\x57\xf9\xdb\x28\x92\xcf\x17\x24\xa6\x39\x79\x7b\xda\x5f\x30\x5d\xcf\x95\x0f\x56\xab\x45\x2f\xa7\x37\x55\xb4\x0e\x99\xe2\x35\x4c\x92\x04\x85\x6b\x33\xaf\x41\xbd\xa2\xa1\xaa\xe4\xb9\x3c\x2d\x88\xac\xce\x7f\x35\xce\x16\xf8\x35\xe6\x2d\x97\xf7\x7a\x7b\x74\x5b\xcb\xbb\xf6\xd1\x7d\x5f\x6f\xd5\xd3\xa5\xe8\x8e\x6e\xa5\x3b\xae\x84\x35\x65\x43\x4f\x7d\x72\xac\x24\x42\xde\x21\x53\xb6\xd6\x22\xe1\x41\x63\x2d\x7c\x08\x27\x96\x44\xcb\x7b\x64\xbb\x13\xb7\xde\x23\xb5\x13\x2d\xb7\xd2\x23\x7f\xb0\xe8\x01\x59\xb4\xbb\x03\xff\xfd\x1d\x00\x00\xff\xff\x95\x07\xcf\x10\x9f\x22\x00\x00")

func templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJava,
		"templates/wsa/src/main/java/orawsgen/DefaultTypesMethods.java",
	)
}

func templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJava() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/orawsgen/DefaultTypesMethods.java", size: 8863, mode: os.FileMode(511), modTime: time.Unix(1508255852, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainJavaOrawsgenXmlanyJava = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\x4f\x4b\xc3\x40\x10\xc5\xef\x81\xfd\x0e\x43\x4e\x2d\xc8\xf6\xe0\xb1\x08\x15\xac\x20\x08\x5e\x3c\x78\x9d\xee\x0e\x71\xeb\xfe\x63\x77\x93\x36\x48\xbf\xbb\xd3\xa4\xb1\xb6\x27\x3b\xe4\x92\xbc\xf7\x7e\xbc\x97\x88\xea\x0b\x1b\x82\x90\x70\x97\x1b\xf2\x4b\x51\x89\xca\xb8\x18\x52\x81\x2d\x76\xb8\x97\x7b\x67\xe5\xc6\x78\x2d\xd1\xfb\x50\xb0\x98\xe0\xe5\x87\xb3\x8f\x4a\x51\xce\xef\x7d\xa4\xe5\x2d\x81\x90\x6e\x89\xf8\x7e\x6d\xc9\x91\x2f\xff\x0c\x9c\xd8\xbf\xe6\x90\x1a\xb9\xbb\x57\x52\x07\x27\xcf\x24\x51\x2d\x16\x5b\xd2\x3e\x00\x63\xa0\x83\x82\x4d\x0b\xe8\x7b\x51\xad\xae\x7a\xce\x2e\x86\xca\xe7\x97\xf5\xeb\xd3\x7c\xb4\x0d\xb2\x47\x47\xf0\x00\x75\x7d\x07\x31\x85\xf8\x96\x34\x25\x7e\xff\x16\x15\xf0\xd5\xcc\xac\x45\x75\xe0\x44\x6c\x37\xd6\x28\x50\x16\x73\x86\x71\xd9\xe4\x5a\x5d\x0c\x9d\x59\xdc\x33\xa1\xa4\x96\xe6\xa3\xce\xe0\x42\xaa\x90\x86\x93\xe5\x58\x75\x58\x31\xa8\x23\x78\x92\x1a\x2a\xcc\x9a\xcd\x27\xf8\xf1\x12\x95\x36\xf9\x53\xea\xf8\xe1\x70\x15\xee\x82\xd1\x90\xc7\xe4\x04\xea\xd0\x72\x83\xbf\x98\xf2\x69\x32\xff\xee\x9e\xdb\x0d\xe2\x19\xc6\xcf\x4f\x00\x00\x00\xff\xff\x81\x8f\x7d\xea\x47\x02\x00\x00")

func templatesWsaSrcMainJavaOrawsgenXmlanyJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainJavaOrawsgenXmlanyJava,
		"templates/wsa/src/main/java/orawsgen/XmlAny.java",
	)
}

func templatesWsaSrcMainJavaOrawsgenXmlanyJava() (*asset, error) {
	bytes, err := templatesWsaSrcMainJavaOrawsgenXmlanyJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/java/orawsgen/XmlAny.java", size: 583, mode: os.FileMode(511), modTime: time.Unix(1508246706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWsaSrcMainWebappIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\xc1\xae\x82\x30\x10\x45\xf7\x2f\x79\xff\x50\xba\x27\x0d\x3b\x13\x07\x36\xa8\x71\x27\x89\x18\xe3\xb2\xc2\xc4\x92\x14\x8a\x78\x35\xf2\xf7\xa2\x54\xd3\x6e\x3a\x77\x72\x66\x4e\x86\xa2\xd5\x2e\x2f\x4f\xc5\x5a\x18\xb4\x36\xfb\xff\x23\xff\x8b\xe9\x91\x61\x5d\xfb\xfa\x93\xd1\xc0\x72\xb6\x87\x1e\x20\x0a\x7d\x61\x52\x73\x27\x40\x5a\x86\x9e\x76\xa1\x8f\xf9\x7a\x6f\x1e\xa9\xcc\x5d\x07\xee\x10\x97\x63\xcf\x52\x54\x73\x4a\x25\xf8\x09\xf5\x76\x2d\x45\x65\xf4\x70\x63\xa4\x87\x72\x13\x2f\xe4\xd7\xad\x02\x39\x9d\x5d\x3d\x86\x16\x93\x64\x5b\xb6\xd6\x89\xa3\x1b\x6c\x1d\x4d\x70\xf2\x9b\xf3\x2c\x29\x7f\xc9\x2b\x00\x00\xff\xff\x0c\x2b\x67\xa3\xe3\x00\x00\x00")

func templatesWsaSrcMainWebappIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesWsaSrcMainWebappIndexHtml,
		"templates/wsa/src/main/webapp/index.html",
	)
}

func templatesWsaSrcMainWebappIndexHtml() (*asset, error) {
	bytes, err := templatesWsaSrcMainWebappIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/wsa/src/main/webapp/index.html", size: 227, mode: os.FileMode(511), modTime: time.Unix(1508246706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/wsa/pom.xml.tmpl": templatesWsaPomXmlTmpl,
	"templates/wsa/src/main/java/PKGNAME/GeneratedTypesMethods.java.tmpl": templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmpl,
	"templates/wsa/src/main/java/PKGNAME/GeneratedWSSoap.java.tmpl": templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmpl,
	"templates/wsa/src/main/java/PKGNAME/GeneratedWSTypes.java.tmpl": templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmpl,
	"templates/wsa/src/main/java/PKGNAME/package-info.java.tmpl": templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmpl,
	"templates/wsa/src/main/java/orawsgen/DBUtils.java": templatesWsaSrcMainJavaOrawsgenDbutilsJava,
	"templates/wsa/src/main/java/orawsgen/DefaultTypesMethods.java": templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJava,
	"templates/wsa/src/main/java/orawsgen/XmlAny.java": templatesWsaSrcMainJavaOrawsgenXmlanyJava,
	"templates/wsa/src/main/webapp/index.html": templatesWsaSrcMainWebappIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"wsa": &bintree{nil, map[string]*bintree{
			"pom.xml.tmpl": &bintree{templatesWsaPomXmlTmpl, map[string]*bintree{}},
			"src": &bintree{nil, map[string]*bintree{
				"main": &bintree{nil, map[string]*bintree{
					"java": &bintree{nil, map[string]*bintree{
						"PKGNAME": &bintree{nil, map[string]*bintree{
							"GeneratedTypesMethods.java.tmpl": &bintree{templatesWsaSrcMainJavaPkgnameGeneratedtypesmethodsJavaTmpl, map[string]*bintree{}},
							"GeneratedWSSoap.java.tmpl": &bintree{templatesWsaSrcMainJavaPkgnameGeneratedwssoapJavaTmpl, map[string]*bintree{}},
							"GeneratedWSTypes.java.tmpl": &bintree{templatesWsaSrcMainJavaPkgnameGeneratedwstypesJavaTmpl, map[string]*bintree{}},
							"package-info.java.tmpl": &bintree{templatesWsaSrcMainJavaPkgnamePackageInfoJavaTmpl, map[string]*bintree{}},
						}},
						"orawsgen": &bintree{nil, map[string]*bintree{
							"DBUtils.java": &bintree{templatesWsaSrcMainJavaOrawsgenDbutilsJava, map[string]*bintree{}},
							"DefaultTypesMethods.java": &bintree{templatesWsaSrcMainJavaOrawsgenDefaulttypesmethodsJava, map[string]*bintree{}},
							"XmlAny.java": &bintree{templatesWsaSrcMainJavaOrawsgenXmlanyJava, map[string]*bintree{}},
						}},
					}},
					"webapp": &bintree{nil, map[string]*bintree{
						"index.html": &bintree{templatesWsaSrcMainWebappIndexHtml, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

